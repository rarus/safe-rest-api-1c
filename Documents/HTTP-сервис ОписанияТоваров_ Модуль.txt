
Функция ВызовМетодаPOST(Запрос)
	
	// Получаем перечень параметров извлекаемых из запроса
	ПараметрыМетода = ПараметрыМетодаВызовМетодаPOST();
	
	// Регистрируем запрос в подсистеме контроля HTTP-сервисов
	Контекст = кв_HTTPСервисы.КонтекстЗапроса(Запрос, Истина, Истина, ПараметрыМетода);
	
	// Проверяем запрос на идемпотентность
	Если Контекст.ГотовОтветНаЗапрос Тогда
		Возврат кв_HTTPСервисы.ОтветНаЗапрос(Контекст);
	КонецЕсли;
	
	// Выполняем обработку бизнес логики запроса
	ОбработатьЗапросВызовМетодаPOST(Контекст);
	
	// Регистрируем ответ сервиса и статус обработки
	Возврат кв_HTTPСервисы.ОтветНаЗапрос(Контекст);

КонецФункции

// Формирует описание получаемых параметров запроса ВызовМетодаPOST.
// В коллекции перечислены поля, избирательно извлекаемые из тела запроса, 
//	которые при этом могут быть обязательными к заполнению.
// 
// Возвращаемое значение:
//   - Структура - описание параметров полей
//		*Ключ - Строка - Имя поля запроса.
//		*Значение - Булево - Признак обязательности заполнения поля.
//
Функция ПараметрыМетодаВызовМетодаPOST()
	
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("Article", Истина);
	
	Возврат ПараметрыМетода;
	
КонецФункции

// Обработчик входящего запроса ВызовМетодаPOST
//  Функциональный уровень обработки, бизнес-логика.
//
// Параметры:
//  Контекст - Структура - см. кв_HttpСервисы.КонтекстЗапроса().
//
Процедура ОбработатьЗапросВызовМетодаPOST(Контекст)
	
	Артикул = Контекст.ПараметрыЗапроса["Article"];
	
	Товар = ПолучитьТоварПоАртикулу(Артикул);
	Если Товар = Неопределено Тогда
		ТекстОшибки = СтрШаблон("Товар с артикулом '%1' не найден", Артикул);
		кв_HTTPСервисы.ДобавитьОписаниеОшибки(Контекст, 400, , ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ИмяМетода = Контекст.ПараметрыЗапроса["ИмяМетода"];
	
	Если НЕ ИзвестныйМетод(ИмяМетода) Тогда
		ТекстОшибки = СтрШаблон("Неизвестное имя метода: %1", ИмяМетода);
		кв_HTTPСервисы.ДобавитьОписаниеОшибки(Контекст, 400, , ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	УстановитьОписаниеТовара(ИмяМетода, Товар, Контекст);
	
	ПередатьОписаниеТовара(ИмяМетода, Товар, Контекст);
	
КонецПроцедуры 

Функция ПолучитьТоварПоАртикулу(Артикул)
	
	ТекстЗапроса = "ВЫБРАТЬ Ссылка 
	        | ИЗ Справочник.Товары 
			| ГДЕ Артикул = &Артикул";
			
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Артикул", Артикул);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка.ПолучитьОбъект();
	Иначе
		Возврат Неопределено;
	КонецЕсли;			

КонецФункции

Функция ИзвестныйМетод(ИмяМетода)
	
	ИзвестныеМетоды = СтрРазделить("SetDescription, GetDescription", ", ", Ложь);
	
	ЭтоИзвестныйМетод = НЕ ИзвестныеМетоды.Найти(ИмяМетода) = Неопределено;
	
	Возврат ЭтоИзвестныйМетод;
	
КонецФункции

Процедура УстановитьОписаниеТовара(ИмяМетода, Товар, Контекст)
	
	Если НЕ ИмяМетода = "SetDescription" Тогда
		Возврат;
	КонецЕсли;
	
	Товар.Описание = Контекст.ТелоЗапроса;
	
	УстановитьПривилегированныйРежим(Истина);
	Товар.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	
	ЗаполнитьОтветНаЗапросЗаписиТовара(Контекст);
	
КонецПроцедуры

Процедура ПередатьОписаниеТовара(ИмяМетода, Товар, Контекст)
	
	Если НЕ ИмяМетода = "GetDescription" Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьОтветНаЗапросПолученияОписанияТовара(Товар, Контекст);
	
КонецПроцедуры

Процедура ЗаполнитьОтветНаЗапросЗаписиТовара(Контекст)
	
	ПараметрыОтвета = Новый Структура;
	ПараметрыОтвета.Вставить("succes", Истина);
	ПараметрыОтвета.Вставить("Article", Контекст.ПараметрыЗапроса["Article"]);
	
	Контекст.Результат.Вставить("ПараметрыОтвета", ПараметрыОтвета);
	Контекст.Результат.Вставить("КодСостояния", 204);
	
КонецПроцедуры 

Процедура ЗаполнитьОтветНаЗапросПолученияОписанияТовара(Товар, Контекст)
	
	ПараметрыОтвета = Новый Структура;
	ПараметрыОтвета.Вставить("Article", Контекст.ПараметрыЗапроса["Article"]);
	ПараметрыОтвета.Вставить("Description", Товар.Описание);  
	
	Контекст.Результат.Вставить("ПараметрыОтвета", ПараметрыОтвета);
	
КонецПроцедуры

