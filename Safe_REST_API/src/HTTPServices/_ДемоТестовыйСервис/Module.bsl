///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022-2025, ООО 1С-Рарус
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытий

// Обработчик входящего запроса PartnerPOST
// Интерфейсный уровень обработки.
//
// Параметры:
//  Запрос - HTTPСервисЗапрос - входящий запрос.
// 
// Возвращаемое значение:
//   - HTTPСервисОтвет - ответ на входящий запрос.
//
Функция partnerPOST(Запрос)
	
	// Получаем перечень параметров извлекаемых из запроса
	ПараметрыМетода = ПараметрыМетодаPartnerPost();
	
	// Регистрируем запрос в подсистеме контроля HTTP-сервисов
	Контекст = кв_HTTPСервисы.КонтекстЗапроса(Запрос, Истина, Истина, ПараметрыМетода);
	
	// Проверяем запрос на идемпотентность
	Если Контекст.ГотовОтветНаЗапрос Тогда
		Возврат кв_HTTPСервисы.ОтветНаЗапрос(Контекст);
	КонецЕсли;
	
	// Выполняем обработку бизнес логики запроса
	ОбработатьЗапросPartnerPOST(Контекст);
	
	// Регистрируем ответ сервиса и статус обработки
	Возврат кв_HTTPСервисы.ОтветНаЗапрос(Контекст);

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует описание получаемых параметров запроса PartnerPOST.
// В коллекции перечислены поля, избирательно извлекаемые из тела запроса, 
//	которые при этом могут быть обязательными к заполнению.
// 
// Возвращаемое значение:
//   - Структура - описание параметров полей
//		*Ключ - Строка - Имя поля запроса.
//		*Значение - Булево - Признак обязательности заполнения поля.
//
Функция ПараметрыМетодаPartnerPost()
	
	ПараметрыМетода = Новый Структура;
	ПараметрыМетода.Вставить("name", Истина);
	ПараметрыМетода.Вставить("inn",  Истина);
	
	Возврат ПараметрыМетода;
	
КонецФункции

#Область БизнесЛогика

// Обработчик входящего запроса PartnerPOST
//  Функциональный уровень обработки, бизнес-логика.
//
// Параметры:
//  Контекст - Структура - см. кв_HttpСервисы.КонтекстЗапроса().
//
Процедура ОбработатьЗапросPartnerPOST(Контекст)
	
	ЗаписатьПартнера(Контекст);
	
	ЗаполнитьОтветНаЗапросЗаписиПартнера(Контекст);
	
КонецПроцедуры

Процедура ЗаписатьПартнера(Контекст)
	
	ПараметрыПартнера = Новый Структура;
	ПараметрыПартнера.Вставить("Наименование", Контекст.ПараметрыЗапроса["name"]);
	ПараметрыПартнера.Вставить("ИНН", Контекст.ПараметрыЗапроса["inn"]);
	
	УстановитьПривилегированныйРежим(Истина);
	
	ПартнерОбъект = Справочники._ДемоПартнеры.СоздатьЭлемент();
	ПартнерОбъект.Заполнить(ПараметрыПартнера); 
	
	ПаузаСекунд = Константы._ДемоПаузаПриЗаписиПартнера.Получить();
	Если ПаузаСекунд > 0 Тогда
		кв_ОбщегоНазначения.Пауза(ПаузаСекунд);
	КонецЕсли;
	
	Попытка
	
		ПартнерОбъект.Записать();
		
		ИДПартнера = ПартнерОбъект.Ссылка.УникальныйИдентификатор();
		Контекст.Вставить("ИдентификаторПартнера", ИДПартнера);
		
	Исключение
		
		ОтветитьТакойПартнерУжеЕсть(Контекст);
		
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьОтветНаЗапросЗаписиПартнера(Контекст)
	
	Если кв_HTTPСервисы.ГотовоОписаниеОшибкиВОтвете(Контекст.Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОтвета = Новый Структура;
	ПараметрыОтвета.Вставить("succes", Истина);
	ПараметрыОтвета.Вставить("id", Контекст.ИдентификаторПартнера);
	
	Контекст.Результат.Вставить("ПараметрыОтвета", ПараметрыОтвета);
	
КонецПроцедуры

Процедура ОтветитьТакойПартнерУжеЕсть(Контекст)
	
	Шаблон = "Partner with the inn number '%1' already exists";
	ТекстОшибки = СтрШаблон(Шаблон, Контекст.ПараметрыЗапроса["inn"]);
	
	кв_HTTPСервисы.ДобавитьОписаниеОшибки(Контекст, 400, , ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти