///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2022-2025, ООО 1С-Рарус
// Все права защищены. Эта программа и сопроводительные материалы предоставляются
// в соответствии с условиями лицензии Attribution-ShareAlike 4.0 International (CC BY-SA 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by-sa/4.0/legalcode
//////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Фиксирует параметры входящего запроса в журнале.
//  В контекст добавляется уникальный идентификатор запроса, по которому позже будет записан ответ на текущий запрос.
//
// Параметры:
//  Контекст - Структура - См. кв_HTTPСервисы.КонтекстЗапроса().
//
Процедура ЗафиксироватьПараметрыЗапроса(Контекст) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ Контекст.НастройкиСервиса.Журналирование Тогда
		Возврат;
	КонецЕсли;
	
	ПредставлениеЗапроса = ПредставлениеЗапроса(Контекст);

	МенеджерЗаписи = РегистрыСведений.кв_ЖурналВходящихHTTPЗапросов.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ДатаЗапроса   = Контекст.ДатаЗапроса;
	МенеджерЗаписи.Сервис        = Контекст.Сервис;
	МенеджерЗаписи.Идентификатор = Контекст.Идентификатор;
	
	МенеджерЗаписи.КлючИдемпотентности = Контекст.КлючИдемпотентности;
	
	МенеджерЗаписи.Ресурс = Контекст.ОтносительныйURL;
	МенеджерЗаписи.Метод = Контекст.Метод;
	МенеджерЗаписи.Запрос = ПредставлениеЗапроса;
	МенеджерЗаписи.ВремяНачала = Контекст.ВремяНачала;
	МенеджерЗаписи.РазмерЗапроса = Контекст.РазмерЗапроса;
	МенеджерЗаписи.ХешЗапроса = Контекст.ХешЗапроса;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Причина = ИнформацияОбОшибке();
		ЗафиксироватьОшибкуВЖурналРегистрации(Контекст, Причина);
	КонецПопытки;
	
КонецПроцедуры

// Фиксирует ответ сервера на запрос в журнале.
//
// Параметры:
//  Контекст - Структура - См. кв_HTTPСервисы.КонтекстЗапроса.
//  Ответ - HTTPОтвет - Ответ.
//
Процедура ЗафиксироватьОтвет(Контекст, Ответ) Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);

	МиллисекундВСекунде = 1000;
	ВремяОкончания = ТекущаяУниверсальнаяДатаВМиллисекундах();
	Длительность   = (ВремяОкончания - Контекст.ВремяНачала) / МиллисекундВСекунде;
	
	ДанныеОтвета = Ответ.ПолучитьТелоКакДвоичныеДанные();
	РазмерОтвета = ДанныеОтвета.Размер();
	
	Попытка
		
		ПредставлениеОтвета = ПредставлениеОтвета(Ответ, Контекст);
		
		НаборЗаписей = РегистрыСведений.кв_ЖурналВходящихHTTPЗапросов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Сервис.Установить(Контекст.Сервис);
		НаборЗаписей.Отбор.Идентификатор.Установить(Контекст.Идентификатор);
		
		НаборЗаписей.Прочитать();
		
		Для каждого Запись Из НаборЗаписей Цикл
			
			Запись.Ответ = ПредставлениеОтвета;
			Запись.КодСостояния = Ответ.КодСостояния;
			Запись.Длительность = Длительность;
			Запись.РазмерОтвета = РазмерОтвета;
			
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	Исключение
		
		Причина = ИнформацияОбОшибке();
		ЗафиксироватьОшибкуВЖурналРегистрации(Контекст, Причина);
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Формирует строковое представление ответа сервера.
//
// Параметры:
//  Ответ   - HTTPОтвет - Ответ сервера.
//  Контекст   - Структура - См. кв_HTTPСервисы.КонтекстЗапроса.
// 
// Возвращаемое значение:
//  Строка - Описание ответа.
//
Функция ПредставлениеОтвета(Ответ, Контекст)
	
	Шаблон = "Код состояния: %1. Причина: %2
		|Заголовки: %3
		|Тело ответа: %4";
	
	ЗаголовкиСтрокой = кв_HTTPСервисы.ЗаголовкиСтрокой(Ответ.Заголовки);
	
	Если Контекст.НастройкиСервиса.РегистрироватьТелоОтвета Тогда
		ТелоОтвета = Ответ.ПолучитьТелоКакСтроку();
	Иначе
		ТелоОтвета = "";
	КонецЕсли;
	
	ПредставлениеОтвета = СтрШаблон(Шаблон, Формат(Ответ.КодСостояния, "ЧЦ=3; ЧРГ=' '"), Ответ.Причина, ЗаголовкиСтрокой, ТелоОтвета);
	
	ДополнитьПредставлениеОтвета(Контекст, ПредставлениеОтвета);
	
	Возврат ПредставлениеОтвета;

КонецФункции 

Процедура ДополнитьПредставлениеОтвета(Контекст, ПредставлениеОтвета)

	ТекстОшибки = кв_ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Контекст, "ТекстОшибки", "");
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
	
		Шаблон = "%1	
			|Текст ошибки: %2";
		
		ПредставлениеОтвета = СтрШаблон(Шаблон, ПредставлениеОтвета, ТекстОшибки);
	
	КонецЕсли;

КонецПроцедуры

Функция ПредставлениеЗапроса(Контекст)
	
	ШаблонОписания = "URL: %1,
		|HTTP-метод: %2,
		|Заголовки: %3,
		|Параметры ресурса: %4,
		|Параметры запроса: %5,
		|Тело запроса: %6";
	
	ЗаголовкиСтрокой = кв_HTTPСервисы.ЗаголовкиСтрокой(Контекст.Заголовки);
	
	ПредставлениеПараметровРесурса = ПредставлениеПараметровЗапроса(Контекст.ПараметрыШаблонаURL);
	
	ПредставлениеПараметровЗапроса = ПредставлениеПараметровЗапроса(Контекст.ПараметрыЗапросаИзURL);
	
	ПредставлениеТелаЗапроса = ПредставлениеТелаЗапроса(Контекст);
	
	ПредставлениеЗапроса = СтрШаблон(ШаблонОписания, Контекст.БазовыйURL, Контекст.Метод, ЗаголовкиСтрокой,
		ПредставлениеПараметровРесурса, ПредставлениеПараметровЗапроса, ПредставлениеТелаЗапроса);
		
	Возврат ПредставлениеЗапроса;
		
КонецФункции 

Функция ПредставлениеПараметровЗапроса(ПараметрыЗапросаИзURL)
	
	МассивСтрок = Новый Массив;
	ШаблонОписания = "%1 - ""%2""%3""%4""";
	
	Для каждого ПараметрЗапроса Из ПараметрыЗапросаИзURL Цикл
		СтрокаПредставления = СтрШаблон(ШаблонОписания, Символы.ПС, ПараметрЗапроса.Ключ, ": ", ПараметрЗапроса.Значение);
		МассивСтрок.Добавить(СтрокаПредставления);
	КонецЦикла;
	
	СтрокаПредставления = СтрСоединить(МассивСтрок, ";");
	
	Возврат СтрокаПредставления;
	
КонецФункции

// Выполняет формирование и запись информации об ошибке в журнал регистрации.
// Вызывается при возникновении исключения в блоке Попытка - Исключение.	
//
// Параметры:
//  Контекст  - Структура - См. кв_HTTPСервисы.КонтекстЗапроса().
//
Процедура ЗафиксироватьОшибкуВЖурналРегистрации(Контекст, Причина)

	ТекстОшибки = ПодробноеПредставлениеОшибки(Причина);
	УровеньЖурнала = УровеньЖурналаРегистрации.Ошибка;
	МетаданныеОбъекта = Метаданные.РегистрыСведений.кв_ЖурналВходящихHTTPЗапросов;
	
	ЗаписьЖурналаРегистрации(Контекст.ИмяСобытия, УровеньЖурнала, МетаданныеОбъекта, , ТекстОшибки);

КонецПроцедуры

// Возвращает представление тела запроса для журнала входящих запросов.
//
// Параметры:
//  Контекст - Структура - параметры обрабатываемого HTTP-запроса.
// 
// Возвращаемое значение:
//   - Строка - представление тела запроса. 
//
Функция ПредставлениеТелаЗапроса(Контекст)
	
	ОграничениеДлины = Контекст.НастройкиСервиса.МаксимальнаяДлинаТелаЗапроса;
	СлужебнаяЧасть   = 21;
	
	Если ЗначениеЗаполнено(ОграничениеДлины) И СтрДлина(Контекст.ТелоЗапроса) > (ОграничениеДлины + СлужебнаяЧасть) Тогда
		Шаблон = "%1%2%3%4%5%6";
		УрезанноеТелоЗапроса = Лев(Контекст.ТелоЗапроса, ОграничениеДлины);
		ПредставлениеТелаЗапроса = СтрШаблон(Шаблон, Символы.ПС, УрезанноеТелоЗапроса, Символы.ПС, "... # cutted # ...", Символы.ПС, "}");
	Иначе
		ПредставлениеТелаЗапроса = СтрШаблон("%1%2", Символы.ПС, Контекст.ТелоЗапроса);
	КонецЕсли;
	
	Возврат ПредставлениеТелаЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли